// Code generated by MockGen. DO NOT EDIT.
// Source: src/repository/resourcemanager/resourcemanager.go

// Package resourcemanager is a generated GoMock package.
package resourcemanager

import (
	"coffeeMachine/src/entities"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRepository is a mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// UpdateIngredient mocks base method
func (m *MockRepository) UpdateIngredient(ctx context.Context, updateReq UpdateRequest) (*entities.Ingredient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateIngredient", ctx, updateReq)
	ret0, _ := ret[0].(*entities.Ingredient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateIngredient indicates an expected call of UpdateIngredient
func (mr *MockRepositoryMockRecorder) UpdateIngredient(ctx, updateReq interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateIngredient", reflect.TypeOf((*MockRepository)(nil).UpdateIngredient), ctx, updateReq)
}

// GetIngredient mocks base method
func (m *MockRepository) GetIngredient(ctx context.Context, getReq GetRequest) (*entities.Ingredient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIngredient", ctx, getReq)
	ret0, _ := ret[0].(*entities.Ingredient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIngredient indicates an expected call of GetIngredient
func (mr *MockRepositoryMockRecorder) GetIngredient(ctx, getReq interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIngredient", reflect.TypeOf((*MockRepository)(nil).GetIngredient), ctx, getReq)
}
